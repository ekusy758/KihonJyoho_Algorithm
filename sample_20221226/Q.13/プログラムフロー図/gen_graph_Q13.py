from graphviz import Digraph

dot = Digraph(format='png')
dot.attr(rankdir='TB')
dot.attr('node', shape='box', style='filled', fontname='MS Gothic', fillcolor='lightyellow')

dot.node('start', '開始（配列と探す値を受け取る）')
dot.node('init', 'low を 0 に設定\nhigh を 配列の要素数 - 1 に設定')
dot.node('loopCond', 'low が high 以下ですか？', shape='diamond', fillcolor='lightblue')
dot.node('calcMid', 'middle を計算：\n(low + high) ÷ 2')
dot.node('compareLow', 'data[middle] < 探す値 ですか？', shape='diamond', fillcolor='lightblue')
dot.node('incLow', '探索範囲を前方に移動\nlow に middle + 1 を代入')
dot.node('compareHigh', 'data[middle] > 探す値 ですか？', shape='diamond', fillcolor='lightblue')
dot.node('decHigh', '探索範囲を後方に移動\nhigh に middle - 1 を代入')
dot.node('found', '一致! (探索の終了)\nmiddle を返す')
dot.node('nextLoop', '次の繰り返しへ', shape='ellipse', fillcolor='lightgrey')
dot.node('notFound', '見つからない! (探索の終了)\n−1 を返す')
dot.node('end', '終了')

dot.edge('start', 'init')
dot.edge('init', 'loopCond')
dot.edge('loopCond', 'calcMid', label='Yes')
dot.edge('calcMid', 'compareLow')
dot.edge('compareLow', 'incLow', label='Yes')
dot.edge('incLow', 'nextLoop')
dot.edge('compareLow', 'compareHigh', label='No')
dot.edge('compareHigh', 'decHigh', label='Yes')
dot.edge('decHigh', 'nextLoop')
dot.edge('compareHigh', 'found', label='No')
dot.edge('nextLoop', 'loopCond')
dot.edge('loopCond', 'notFound', label='No')
dot.edge('found', 'end')
dot.edge('notFound', 'end')

dot.render('graph_Q13', view=True, cleanup=True)
